{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOG,WAAW,mBCAjD,EAA+BH,OAAOC,KAAKC,OAAO,c,aCUlDE,EAAWC,EAAAA,MAAkBC,qBAGnC,iBAAgBC,GAEd,IAAMC,EAAUJ,EAASG,GAKzB,OAHAC,EAAQC,MAAQC,IAAAA,WAAeC,MAAM,wCAG9BH,CACR,ECjBDE,IAAAA,aAAiBE,IAAI,qBAAqB,WACxCF,IAAAA,cAAiB,IACV,qBACJG,mBACC,CACEC,KAAM,sBACNC,MAAOL,IAAAA,WAAeC,MAAM,yDAC5BK,WAAY,mBAEd,QACA,IAEDC,gBAAgB,CACfF,MAAOL,IAAAA,WAAeC,MAAM,4DAC5BO,KAAM,OACNC,QAAS,wCAEVF,gBAAgB,CACfF,MAAOL,IAAAA,WAAeC,MAAM,2DAC5BO,KAAM,OACNC,QAAS,uCAGTT,IAAAA,aAAiBU,IAAI,qBAEvBf,EAAAA,MAAkBC,qBAAuBA,EAEzCD,EAAAA,MAAkBC,qBAAqB,kBAE3C,G","sources":["webpack://@ianm/follow-users/webpack/bootstrap","webpack://@ianm/follow-users/webpack/runtime/compat get default export","webpack://@ianm/follow-users/webpack/runtime/define property getters","webpack://@ianm/follow-users/webpack/runtime/hasOwnProperty shorthand","webpack://@ianm/follow-users/external root \"flarum.core.compat['admin/app']\"","webpack://@ianm/follow-users/external assign \"flarum.extensions['fof-follow-tags']\"","webpack://@ianm/follow-users/external root \"flarum.core.compat['common/app']\"","webpack://@ianm/follow-users/./src/common/helpers/followingPageOptions.js","webpack://@ianm/follow-users/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.extensions['fof-follow-tags'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\nimport * as follow_tags from '@fof-follow-tags';\n\n// We need to add options to the list of options available on the following page\n// As `follow_tags.utils.followingPageOptions` is a function, we cannot really\n// extend or override it with the Flarum helpers.\n// As the result of this function is cached after its first execution,\n// we can use the below version and execute this one to cache the desired options.\n\n// Save the reference to the original function, as it will be overriden\nconst original = follow_tags.utils.followingPageOptions;\n\n// Customized version of the helper with addition options for followed users\nexport default (section) => {\n  // Get the original options\n  const options = original(section);\n\n  options.users = app.translator.trans('ianm-follow-users.lib.following_link');\n\n  // Return the mutated options list\n  return options;\n};\n","import app from 'flarum/admin/app';\nimport * as follow_tags from '@fof-follow-tags';\nimport followingPageOptions from '../common/helpers/followingPageOptions';\n\napp.initializers.add('ianm-follow-users', () => {\n  app.extensionData\n    .for('ianm-follow-users')\n    .registerPermission(\n      {\n        icon: 'fas fa-user-friends',\n        label: app.translator.trans('ianm-follow-users.admin.permissions.be_followed_label'),\n        permission: 'user.beFollowed',\n      },\n      'reply',\n      95\n    )\n    .registerSetting({\n      label: app.translator.trans('ianm-follow-users.admin.settings.button-on-profile-label'),\n      type: 'bool',\n      setting: 'ianm-follow-users.button-on-profile',\n    })\n    .registerSetting({\n      label: app.translator.trans('ianm-follow-users.admin.settings.stats-on-profile-label'),\n      type: 'bool',\n      setting: 'ianm-follow-users.stats-on-profile',\n    });\n\n  if (app.initializers.has('fof/follow-tags')) {\n    // Replace the original function with our customized version\n    follow_tags.utils.followingPageOptions = followingPageOptions;\n    // Execute the customized helper to cache the returned list of options\n    follow_tags.utils.followingPageOptions('admin.settings');\n  }\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","extensions","original","follow_tags","followingPageOptions","section","options","users","app","trans","add","registerPermission","icon","label","permission","registerSetting","type","setting","has"],"sourceRoot":""}